{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"emo","text":"<p>emo is an email obfuscation plugin for MODX Revolution.</p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>MODX Revolution 2.6+</li> <li>PHP 7.2+</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>Replace all plaintext emails and email links with span elements.</li> <li>Encrypt the email addresses and store them in javascript variables.</li> <li>Decrypt the email adresses by the browser on 'window.onload'.</li> </ul>"},{"location":"#license","title":"License","text":"<p>The project is licensed under the GPLv2 license.</p>"},{"location":"#translations","title":"Translations","text":"<p>Translations of the package can be made for the Default Lexicon and the System Setting Lexicon</p>"},{"location":"contributors/","title":"Contributors","text":"<p>The emo project was started in 2008 for MODX Evolution by Florian Wobbe and is maintained and developed further since 2011 by Thomas Jakobi.</p> <p>Many thanks to all who contributed, whether by creating pull requests, submitting bug reports, or donating.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#install-from-modx-extras","title":"Install from MODX Extras","text":"<p>Search for emo in the Package Manager of your MODX installation and install it in there.</p>"},{"location":"installation/#manual-installation","title":"Manual installation","text":"<p>If you can't access the MODX Extras Repository in your MODX installation, you can manually install emo.</p> <ul> <li>Download the transport package from MODX Extras (or one of the pre built transport packages in _packages)</li> <li>Upload the zip file to your MODX installation's <code>core/packages</code> folder or upload it manually in the MODX Package Manager.</li> <li>In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button.</li> <li>emo should now show up in the list of available packages. Click the corresponding 'Install' button and follow the instructions to complete the installation.</li> </ul>"},{"location":"installation/#build-it-from-source","title":"Build it from source","text":"<p>To build and install the package from source you could use Git Package Management. The GitHub repository of emo contains a config.json to build that package locally. Use this option, if you want to debug emo and/or contribute bugfixes and enhancements.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#how-it-works","title":"How it works","text":"<p>This plugin searches for <code>mailto:</code> strings in href attributes and all plain text email addresses in the html output. However, only email addresses like <code>user@host.com</code> are matched whereas <code>Tog@ther</code> is left untouched.</p> <p>Matches of all plaintext emails and email links are consequently replaced with span elements only containing a note to turn on javascript. Then email addresses and original link text are encrypted and stored in javascript variables. Decryption routines triggered by the browser on <code>window.onload</code> event are located in the script file <code>emo.js</code>. Optionally, CSS class <code>emo_address</code> can be used to configure the appearance of email links.</p> <p>It is still believed that hexadecimal or unicode encoding will stop spam-bots being able to find your email address. Nevertheless, encoded email address harvester are on the way. Unlike other obfuscation plugins, this one uses real encryption instead of using an out-dated and over-used hack such as hexadecimal or unicode encoding (not encryption) of email addresses. Also, all traces of href attributes as well as <code>mailto:</code> strings and <code>@</code> characters are hidden from spam-bots.</p> <p>The plugin does not modify adresses inside <code>&lt;form&gt;</code> tags. So posted and not validated forms do not break. Sections between  <code>&lt;!-- emo-exclude --&gt;</code> and <code>&lt;!-- /emo-exclude --&gt;</code> are excluded from replacement.</p> <p>If the <code>No javascript</code> message contains a number, a link to a MODX resource with that ID is generated. This could i.e. point to a resouce with a contact form.</p>"},{"location":"usage/#system-settings","title":"System Settings","text":"<p>emo uses the following system settings in the namespace <code>emo</code>:</p> Property Description Default adresses_tpl Name of a chunk that contains the Javascript for the encrypted adresses at the end of the body. tplEmoAdresses css_path Path to emo css js_path Path to emo javascript <code>/assets/components/emo/js/emo.min.js</code> no_script_message 'No javascript' message (Resource ID for internal link) Turn on JavaScript! selection_range Comma separated list of enabled/disabled resource IDs for emo selection_type Selection type for enabled/disabled resources for emo - tpl_only Don't work on resources with blank template Yes"},{"location":"usage/#output-issues","title":"Output issues","text":"<p>Please make sure that the HTML output of MODX uses only UTF-8 characters. Otherwise, the output may break and a blank page will be displayed. This can happen if a non-UTF-8 locale is set in the MODX system settings and a date modifier is used. In addition, the UTF-8 characters must be precomposed.</p>"}]}