{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"emo emo is an email obfuscation plugin for MODX Revolution. Requirements MODX Revolution 2.6+ PHP v5.6+ Features Replace all plaintext emails and email links with span elements. Encrypt the email addresses and store them in javascript variables. Decrypt the email adresses by the browser on 'window.onload'.","title":"Description"},{"location":"#emo","text":"emo is an email obfuscation plugin for MODX Revolution.","title":"emo"},{"location":"#requirements","text":"MODX Revolution 2.6+ PHP v5.6+","title":"Requirements"},{"location":"#features","text":"Replace all plaintext emails and email links with span elements. Encrypt the email addresses and store them in javascript variables. Decrypt the email adresses by the browser on 'window.onload'.","title":"Features"},{"location":"contributors/","text":"The emo project was started in 2008 for MODX Evolution by Florian Wobbe and is maintained and developed further since 2011 by Thomas Jakobi . Many thanks to all who contributed, whether by creating pull requests, submitting bug reports, or donating.","title":"Contributors"},{"location":"installation/","text":"Install from MODX Extras Search for emo in the Package Manager of your MODX installation and install it in there. Manual installation If you can't access the MODX Extras Repository in your MODX installation, you can manually install emo. Download the transport package from MODX Extras (or one of the pre built transport packages in _packages ) Upload the zip file to your MODX installation's core/packages folder or upload it manually in the MODX Package Manager. In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button. emo should now show up in the list of available packages. Click the corresponding 'Install' button and follow instructions to complete the installation. Build it from source To build and install the package from source you could use Git Package Management . The GitHub repository of emo contains a config.json to build that package locally. Use this option, if you want to debug emo and/or contribute bugfixes and enhancements.","title":"Installation"},{"location":"installation/#install-from-modx-extras","text":"Search for emo in the Package Manager of your MODX installation and install it in there.","title":"Install from MODX Extras"},{"location":"installation/#manual-installation","text":"If you can't access the MODX Extras Repository in your MODX installation, you can manually install emo. Download the transport package from MODX Extras (or one of the pre built transport packages in _packages ) Upload the zip file to your MODX installation's core/packages folder or upload it manually in the MODX Package Manager. In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button. emo should now show up in the list of available packages. Click the corresponding 'Install' button and follow instructions to complete the installation.","title":"Manual installation"},{"location":"installation/#build-it-from-source","text":"To build and install the package from source you could use Git Package Management . The GitHub repository of emo contains a config.json to build that package locally. Use this option, if you want to debug emo and/or contribute bugfixes and enhancements.","title":"Build it from source"},{"location":"usage/","text":"How it works This plugin searches for mailto: strings in href attributes and all plain text email addresses in the html output. However, only email addresses like user@host.com are matched whereas Tog@ther is left untouched. Matches of all plaintext emails and email links are consequently replaced with span elements only containing a note to turn on javascript. Then email addresses and original link text are encrypted and stored in javascript variables. Decryption routines triggered by the browser on window.onload event are located in the script file emo.js . Optionally, CSS class emo_address can be used to configure the appearance of email links. It is still believed that hexadecimal or unicode encoding will stop spam-bots being able to find your email address. Nevertheless, encoded email address harvester are on the way. Unlike other obfuscation plugins, this one uses real encryption instead of using an out-dated and over-used hack such as hexadecimal or unicode encoding (not encryption) of email addresses. Also, all traces of href attributes as well as mailto: strings and @ characters are hidden from spam-bots. The plugin does not modify adresses inside <form> tags. So posted and not validated forms do not break. Sections between <!-- emo-exclude --> and <!-- /emo-exclude --> are excluded from replacement. If the No javascript message contains a number, a link to a MODX resource with that ID is generated. This could i.e. point to a resouce with a contact form. System Settings emo uses the following system settings in the namespace emo : Property Description Default tpl_only Don't work on resources with blank template Yes selection_type Selection type for enabled/disabled resources for emo - selection_range Comma separated list of enabled/disabled resource IDs for emo js_path Path to emo javascript /assets/components/emo/js/emo.min.js css_path Path to emo css no_script_message 'No javascript' message (Resource ID for internal link) Turn on JavaScript!","title":"Usage"},{"location":"usage/#how-it-works","text":"This plugin searches for mailto: strings in href attributes and all plain text email addresses in the html output. However, only email addresses like user@host.com are matched whereas Tog@ther is left untouched. Matches of all plaintext emails and email links are consequently replaced with span elements only containing a note to turn on javascript. Then email addresses and original link text are encrypted and stored in javascript variables. Decryption routines triggered by the browser on window.onload event are located in the script file emo.js . Optionally, CSS class emo_address can be used to configure the appearance of email links. It is still believed that hexadecimal or unicode encoding will stop spam-bots being able to find your email address. Nevertheless, encoded email address harvester are on the way. Unlike other obfuscation plugins, this one uses real encryption instead of using an out-dated and over-used hack such as hexadecimal or unicode encoding (not encryption) of email addresses. Also, all traces of href attributes as well as mailto: strings and @ characters are hidden from spam-bots. The plugin does not modify adresses inside <form> tags. So posted and not validated forms do not break. Sections between <!-- emo-exclude --> and <!-- /emo-exclude --> are excluded from replacement. If the No javascript message contains a number, a link to a MODX resource with that ID is generated. This could i.e. point to a resouce with a contact form.","title":"How it works"},{"location":"usage/#system-settings","text":"emo uses the following system settings in the namespace emo : Property Description Default tpl_only Don't work on resources with blank template Yes selection_type Selection type for enabled/disabled resources for emo - selection_range Comma separated list of enabled/disabled resource IDs for emo js_path Path to emo javascript /assets/components/emo/js/emo.min.js css_path Path to emo css no_script_message 'No javascript' message (Resource ID for internal link) Turn on JavaScript!","title":"System Settings"}]}